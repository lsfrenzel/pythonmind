# Quiz data for the Learning Management System

MODULES = {
    1: {
        'title': 'Introdu√ß√£o ao Python',
        'description': 'Fundamentos da linguagem Python, vari√°veis, tipos de dados e fun√ß√µes b√°sicas',
        'content': '''<div class="module-header">
            <h3>üöÄ M√≥dulo 1 - Introdu√ß√£o ao Python</h3>
            <p class="module-intro"><strong>Bem-vindo ao mundo Python!</strong> Uma linguagem poderosa, elegante e vers√°til que conquista desenvolvedores ao redor do mundo. Prepare-se para uma jornada incr√≠vel!</p>
        </div>
        
        <div class="module-content">
            <h4>üéØ O que voc√™ vai aprender:</h4>
            <ul class="learning-objectives">
                <li>Hist√≥ria e caracter√≠sticas do Python</li>
                <li>Como instalar e configurar o ambiente</li>
                <li>Vari√°veis e tipos de dados b√°sicos</li>
                <li>Operadores matem√°ticos e l√≥gicos</li>
                <li>Entrada e sa√≠da de dados</li>
            </ul>
            
            <h4>üìö Conte√∫do Te√≥rico:</h4>
            
            <h5>1. Hist√≥ria do Python</h5>
            <p>Python foi criado por Guido van Rossum no final dos anos 1980 na Holanda. O nome "Python" vem do grupo de com√©dia brit√¢nico "Monty Python". A linguagem foi projetada para ser:</p>
            <ul>
                <li><strong>Leg√≠vel:</strong> C√≥digo f√°cil de ler e entender</li>
                <li><strong>Simples:</strong> Sintaxe clara e intuitiva</li>
                <li><strong>Vers√°til:</strong> Usado em web, ci√™ncia de dados, automa√ß√£o, IA</li>
            </ul>
            
            <h5>2. Caracter√≠sticas Principais</h5>
            <div class="alert alert-info">
                <strong>Python √© uma linguagem:</strong>
                <ul class="mb-0">
                    <li>Interpretada (n√£o precisa compilar)</li>
                    <li>Orientada a objetos</li>
                    <li>De alto n√≠vel</li>
                    <li>Com tipagem din√¢mica</li>
                </ul>
            </div>
            
            <h5>3. Tipos de Dados B√°sicos</h5>
            <div class="code-example">
                <h6>N√∫meros:</h6>
                <pre><code># Inteiros
idade = 25
pontos = 100

# Decimais (float)
altura = 1.75
preco = 29.99</code></pre>
                
                <h6>Texto (strings):</h6>
                <pre><code># Strings
nome = "Jo√£o"
mensagem = 'Ol√° mundo!'
texto_longo = """Texto com
m√∫ltiplas linhas"""</code></pre>
                
                <h6>Booleanos:</h6>
                <pre><code># True ou False
ativo = True
logado = False</code></pre>
            </div>
            
            <h5>4. Primeiros Comandos</h5>
            <div class="code-example">
                <h6>Exibir na tela:</h6>
                <pre><code>print("Ol√°, Python!")
print("Meu nome √©", nome)
print(f"Tenho {idade} anos")</code></pre>
                
                <h6>Capturar dados do usu√°rio:</h6>
                <pre><code>nome = input("Digite seu nome: ")
idade = int(input("Digite sua idade: "))
altura = float(input("Digite sua altura: "))</code></pre>
            </div>
            
            <div class="alert alert-success">
                <h6><i class="fas fa-lightbulb"></i> Dica Importante:</h6>
                <p class="mb-0">Python √© case-sensitive! Isso significa que <code>nome</code> e <code>Nome</code> s√£o vari√°veis diferentes.</p>
            </div>
        </div>''',
        'quiz': [
            {
                'type': 'multiple_choice',
                'question': 'Qual √© a fun√ß√£o usada para exibir texto na tela em Python?',
                'options': ['show()', 'display()', 'print()', 'output()'],
                'correct_answer': 'print()'
            },
            {
                'type': 'multiple_choice',
                'question': 'Como criar uma vari√°vel em Python?',
                'options': ['var nome = "Jo√£o"', 'nome = "Jo√£o"', 'string nome = "Jo√£o"', 'nome := "Jo√£o"'],
                'correct_answer': 'nome = "Jo√£o"'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual tipo de dado representa n√∫meros inteiros?',
                'options': ['float', 'string', 'int', 'number'],
                'correct_answer': 'int'
            },
            {
                'type': 'multiple_choice',
                'question': 'Como capturar dados do usu√°rio?',
                'options': ['get()', 'input()', 'read()', 'scan()'],
                'correct_answer': 'input()'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual s√≠mbolo √© usado para coment√°rios em Python?',
                'options': ['//', '/* */', '#', '--'],
                'correct_answer': '#'
            }
        ]
    },
    2: {
        'title': 'Estruturas Condicionais e Loops',
        'description': 'Aprenda a usar if, elif, else, for e while para controlar o fluxo do programa',
        'content': '''<div class="module-header">
            <h3>üéØ M√≥dulo 2 - Estruturas Condicionais e Loops</h3>
            <p class="module-intro"><strong>D√™ intelig√™ncia aos seus programas!</strong> Aprenda a tomar decis√µes e repetir a√ß√µes de forma eficiente.</p>
        </div>
        
        <div class="module-content">
            <h4>üéØ O que voc√™ vai aprender:</h4>
            <ul class="learning-objectives">
                <li>Estruturas condicionais (if, elif, else)</li>
                <li>Operadores de compara√ß√£o e l√≥gicos</li>
                <li>Loops com for e while</li>
                <li>Fun√ß√£o range() e suas aplica√ß√µes</li>
                <li>Controle de fluxo com break e continue</li>
            </ul>
            
            <h4>üìö Conte√∫do Te√≥rico:</h4>
            
            <h5>1. Estruturas Condicionais</h5>
            <p>As estruturas condicionais permitem que o programa tome decis√µes baseadas em condi√ß√µes.</p>
            
            <div class="code-example">
                <h6>If simples:</h6>
                <pre><code>idade = 18
if idade >= 18:
    print("Voc√™ √© maior de idade")</code></pre>
                
                <h6>If-else:</h6>
                <pre><code>nota = 7.5
if nota >= 7:
    print("Aprovado!")
else:
    print("Reprovado!")</code></pre>
                
                <h6>If-elif-else:</h6>
                <pre><code>nota = 8.5
if nota >= 9:
    print("Excelente!")
elif nota >= 7:
    print("Bom!")
elif nota >= 5:
    print("Regular")
else:
    print("Insuficiente")</code></pre>
            </div>
            
            <h5>2. Operadores de Compara√ß√£o</h5>
            <div class="alert alert-info">
                <ul class="mb-0">
                    <li><code>==</code> - Igual a</li>
                    <li><code>!=</code> - Diferente de</li>
                    <li><code>&gt;</code> - Maior que</li>
                    <li><code>&lt;</code> - Menor que</li>
                    <li><code>&gt;=</code> - Maior ou igual</li>
                    <li><code>&lt;=</code> - Menor ou igual</li>
                </ul>
            </div>
            
            <h5>3. Loops - Repetindo A√ß√µes</h5>
            
            <div class="code-example">
                <h6>Loop for com range:</h6>
                <pre><code># Conta de 0 a 4
for i in range(5):
    print(f"N√∫mero: {i}")
    
# Conta de 1 a 10
for i in range(1, 11):
    print(f"N√∫mero: {i}")
    
# Conta de 2 em 2
for i in range(0, 10, 2):
    print(f"Par: {i}")</code></pre>
                
                <h6>Loop while:</h6>
                <pre><code>contador = 0
while contador < 5:
    print(f"Contador: {contador}")
    contador += 1  # Aumenta 1
    
# Loop at√© o usu√°rio digitar 'sair'
while True:
    resposta = input("Digite 'sair' para parar: ")
    if resposta == 'sair':
        break  # Sai do loop</code></pre>
            </div>
            
            <div class="alert alert-warning">
                <h6><i class="fas fa-exclamation-triangle"></i> Cuidado com Loops Infinitos:</h6>
                <p class="mb-0">Sempre certifique-se de que a condi√ß√£o do while eventualmente se tornar√° False, sen√£o o programa travar√°!</p>
            </div>
        </div>''',
        'quiz': [
            {
                'type': 'multiple_choice',
                'question': 'Qual palavra-chave √© usada para estruturas condicionais?',
                'options': ['when', 'if', 'check', 'condition'],
                'correct_answer': 'if'
            },
            {
                'type': 'multiple_choice',
                'question': 'Como criar um loop que repete 5 vezes?',
                'options': ['for i in range(5):', 'loop 5 times:', 'repeat(5):', 'while 5:'],
                'correct_answer': 'for i in range(5):'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual a diferen√ßa entre "if" e "elif"?',
                'options': ['S√£o iguais', 'elif √© usado para condi√ß√µes adicionais', 'elif √© mais r√°pido', 'if √© obrigat√≥rio'],
                'correct_answer': 'elif √© usado para condi√ß√µes adicionais'
            },
            {
                'type': 'multiple_choice',
                'question': 'Quando usar while ao inv√©s de for?',
                'options': ['Sempre', 'Nunca', 'Quando n√£o sabemos quantas repeti√ß√µes', 'When √© mais r√°pido'],
                'correct_answer': 'Quando n√£o sabemos quantas repeti√ß√µes'
            },
            {
                'type': 'multiple_choice',
                'question': 'O que faz range(1, 6)?',
                'options': ['N√∫meros de 1 a 6', 'N√∫meros de 1 a 5', 'N√∫meros de 0 a 6', 'N√∫meros de 0 a 5'],
                'correct_answer': 'N√∫meros de 1 a 5'
            }
        ]
    },
    3: {
        'title': 'Manipula√ß√£o de Arquivos',
        'description': 'Domine leitura, escrita e processamento de arquivos e formatos como CSV e JSON',
        'content': '''<div class="module-header">
            <h3>üìÅ M√≥dulo 3 - Manipula√ß√£o de Arquivos</h3>
            <p class="module-intro"><strong>Domine o mundo dos dados!</strong> Aprenda a ler, escrever e processar diferentes tipos de arquivos.</p>
        </div>
        
        <div class="module-content">
            <h4>üéØ O que voc√™ vai aprender:</h4>
            <ul class="learning-objectives">
                <li>Abrir, ler e escrever arquivos de texto</li>
                <li>Diferentes modos de abertura de arquivo</li>
                <li>Gerenciamento seguro com 'with'</li>
                <li>Processamento de arquivos CSV</li>
                <li>Trabalhando com arquivos JSON</li>
            </ul>
            
            <h4>üìö Conte√∫do Te√≥rico:</h4>
            
            <h5>1. Abrindo Arquivos</h5>
            <p>Python oferece diferentes modos para trabalhar com arquivos:</p>
            
            <div class="alert alert-info">
                <strong>Modos de abertura:</strong>
                <ul class="mb-0">
                    <li><code>'r'</code> - Leitura (padr√£o)</li>
                    <li><code>'w'</code> - Escrita (sobrescreve)</li>
                    <li><code>'a'</code> - Anexar ao final</li>
                    <li><code>'x'</code> - Cria√ß√£o exclusiva</li>
                    <li><code>'b'</code> - Modo bin√°rio</li>
                </ul>
            </div>
            
            <div class="code-example">
                <h6>Lendo um arquivo:</h6>
                <pre><code># M√©todo b√°sico
arquivo = open('dados.txt', 'r')
conteudo = arquivo.read()
print(conteudo)
arquivo.close()

# M√©todo recomendado com 'with'
with open('dados.txt', 'r') as arquivo:
    conteudo = arquivo.read()
    print(conteudo)
# Arquivo √© fechado automaticamente</code></pre>
                
                <h6>Escrevendo em um arquivo:</h6>
                <pre><code># Criando/sobrescrevendo arquivo
with open('resultado.txt', 'w') as arquivo:
    arquivo.write('Ol√° mundo!\\n')
    arquivo.write('Segunda linha')
    
# Anexando ao arquivo existente
with open('resultado.txt', 'a') as arquivo:
    arquivo.write('\\nTerceira linha')</code></pre>
            </div>
            
            <div class="alert alert-success">
                <h6><i class="fas fa-lightbulb"></i> Boa Pr√°tica:</h6>
                <p class="mb-0">Sempre use <code>with open()</code> para garantir que os arquivos sejam fechados automaticamente, mesmo se ocorrer um erro.</p>
            </div>
        </div>''',
        'quiz': [
            {
                'type': 'multiple_choice',
                'question': 'Como abrir um arquivo para leitura em Python?',
                'options': ['open("file.txt", "r")', 'read("file.txt")', 'file.open("r")', 'load("file.txt")'],
                'correct_answer': 'open("file.txt", "r")'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual √© a vantagem de usar "with open()"?',
                'options': ['√â mais r√°pido', 'Fecha o arquivo automaticamente', 'Usa menos mem√≥ria', '√â obrigat√≥rio'],
                'correct_answer': 'Fecha o arquivo automaticamente'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual modo de abertura sobrescreve um arquivo existente?',
                'options': ['"r"', '"a"', '"w"', '"x"'],
                'correct_answer': '"w"'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual biblioteca √© usada para trabalhar com arquivos CSV?',
                'options': ['json', 'csv', 'pandas', 'file'],
                'correct_answer': 'csv'
            },
            {
                'type': 'multiple_choice',
                'question': 'Como converter um dicion√°rio Python para JSON?',
                'options': ['json.loads()', 'json.dump()', 'json.save()', 'json.convert()'],
                'correct_answer': 'json.dump()'
            }
        ]
    },
    4: {
        'title': 'Fun√ß√µes e M√≥dulos',
        'description': 'Organize seu c√≥digo com fun√ß√µes reutiliz√°veis e modulariza√ß√£o',
        'content': '''<div class="module-header">
            <h3>‚ö° M√≥dulo 4 - Fun√ß√µes e M√≥dulos</h3>
            <p class="module-intro"><strong>Organize e reutilize seu c√≥digo!</strong> Aprenda a criar fun√ß√µes poderosas e modular seu c√≥digo.</p>
        </div>
        
        <div class="module-content">
            <h4>üéØ O que voc√™ vai aprender:</h4>
            <ul class="learning-objectives">
                <li>Definindo e chamando fun√ß√µes</li>
                <li>Par√¢metros e argumentos</li>
                <li>Valores de retorno</li>
                <li>Escopo de vari√°veis</li>
                <li>Importando e criando m√≥dulos</li>
            </ul>
            
            <h4>üìö Conte√∫do Te√≥rico:</h4>
            
            <h5>1. Criando Fun√ß√µes</h5>
            <p>Fun√ß√µes s√£o blocos de c√≥digo reutiliz√°veis que executam uma tarefa espec√≠fica.</p>
            
            <div class="code-example">
                <h6>Fun√ß√£o simples:</h6>
                <pre><code>def saudacao():
    print("Ol√°, bem-vindo!")
    
# Chamando a fun√ß√£o
saudacao()  # Ol√°, bem-vindo!</code></pre>
                
                <h6>Fun√ß√£o com par√¢metros:</h6>
                <pre><code>def saudacao_personalizada(nome):
    print(f"Ol√°, {nome}!")
    
saudacao_personalizada("Maria")  # Ol√°, Maria!</code></pre>
                
                <h6>Fun√ß√£o com retorno:</h6>
                <pre><code>def calcular_area(largura, altura):
    area = largura * altura
    return area
    
resultado = calcular_area(5, 3)
print(f"A √°rea √©: {resultado}")  # A √°rea √©: 15</code></pre>
            </div>
            
            <div class="alert alert-success">
                <h6><i class="fas fa-lightbulb"></i> Princ√≠pio DRY:</h6>
                <p class="mb-0">"Don't Repeat Yourself" - Se voc√™ est√° escrevendo o mesmo c√≥digo v√°rias vezes, crie uma fun√ß√£o!</p>
            </div>
        </div>''',
        'quiz': [
            {
                'type': 'multiple_choice',
                'question': 'Como definir uma fun√ß√£o em Python?',
                'options': ['def funcao():', 'function funcao():', 'create funcao():', 'func funcao():'],
                'correct_answer': 'def funcao():'
            },
            {
                'type': 'multiple_choice',
                'question': 'O que a palavra-chave "return" faz em uma fun√ß√£o?',
                'options': ['Inicia a fun√ß√£o', 'Retorna um valor', 'Para a execu√ß√£o', 'Imprime na tela'],
                'correct_answer': 'Retorna um valor'
            },
            {
                'type': 'multiple_choice',
                'question': 'Como importar uma fun√ß√£o espec√≠fica de um m√≥dulo?',
                'options': ['import modulo.funcao', 'from modulo import funcao', 'get modulo.funcao', 'use modulo.funcao'],
                'correct_answer': 'from modulo import funcao'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual √© a diferen√ßa entre par√¢metros e argumentos?',
                'options': ['S√£o a mesma coisa', 'Par√¢metros s√£o na defini√ß√£o, argumentos na chamada', 'Argumentos s√£o na defini√ß√£o, par√¢metros na chamada', 'Par√¢metros s√£o obrigat√≥rios'],
                'correct_answer': 'Par√¢metros s√£o na defini√ß√£o, argumentos na chamada'
            },
            {
                'type': 'multiple_choice',
                'question': 'Como criar um par√¢metro com valor padr√£o?',
                'options': ['def func(x=10):', 'def func(x:10):', 'def func(x->10):', 'def func(x default 10):'],
                'correct_answer': 'def func(x=10):'
            }
        ]
    },
    5: {
        'title': 'Programa√ß√£o Orientada a Objetos',
        'description': 'Domine classes, objetos, heran√ßa e encapsulamento em Python',
        'content': '''<div class="module-header">
            <h3>üè¢ M√≥dulo 5 - Programa√ß√£o Orientada a Objetos</h3>
            <p class="module-intro"><strong>Construa c√≥digo mais inteligente!</strong> Descubra o poder das classes e objetos.</p>
        </div>
        
        <div class="module-content">
            <h4>üéØ O que voc√™ vai aprender:</h4>
            <ul class="learning-objectives">
                <li>Conceitos de classes e objetos</li>
                <li>M√©todos e atributos</li>
                <li>Construtor __init__</li>
                <li>Heran√ßa e polimorfismo</li>
                <li>Encapsulamento</li>
            </ul>
            
            <h4>üìö Conte√∫do Te√≥rico:</h4>
            
            <h5>1. Classes e Objetos</h5>
            <p>Uma classe √© um modelo para criar objetos. Um objeto √© uma inst√¢ncia de uma classe.</p>
            
            <div class="code-example">
                <h6>Criando uma classe:</h6>
                <pre><code>class Pessoa:
    def __init__(self, nome, idade):
        self.nome = nome
        self.idade = idade
    
    def apresentar(self):
        return f"Ol√°, eu sou {self.nome} e tenho {self.idade} anos"
    
    def fazer_aniversario(self):
        self.idade += 1
        print(f"{self.nome} fez anivers√°rio! Agora tem {self.idade} anos")

# Criando objetos
pessoa1 = Pessoa("Jo√£o", 25)
pessoa2 = Pessoa("Maria", 30)

print(pessoa1.apresentar())
pessoa1.fazer_aniversario()</code></pre>
            </div>
            
            <div class="alert alert-info">
                <h6><i class="fas fa-info-circle"></i> Conceitos Importantes:</h6>
                <ul class="mb-0">
                    <li><strong>self:</strong> Refer√™ncia ao objeto atual</li>
                    <li><strong>__init__:</strong> Construtor da classe</li>
                    <li><strong>_atributo:</strong> Indica atributo "privado"</li>
                </ul>
            </div>
        </div>''',
        'quiz': [
            {
                'type': 'multiple_choice',
                'question': 'Como definir uma classe em Python?',
                'options': ['class MinhaClasse:', 'create MinhaClasse:', 'def MinhaClasse:', 'object MinhaClasse:'],
                'correct_answer': 'class MinhaClasse:'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual m√©todo √© chamado automaticamente ao criar um objeto?',
                'options': ['__create__', '__init__', '__new__', '__start__'],
                'correct_answer': '__init__'
            },
            {
                'type': 'multiple_choice',
                'question': 'O que √© heran√ßa em POO?',
                'options': ['Copiar c√≥digo', 'Uma classe filha herda caracter√≠sticas da classe pai', 'Deletar classes', 'Renomear m√©todos'],
                'correct_answer': 'Uma classe filha herda caracter√≠sticas da classe pai'
            },
            {
                'type': 'multiple_choice',
                'question': 'O que significa "self" em Python?',
                'options': ['Refer√™ncia ao objeto atual', 'Nome da classe', 'M√©todo especial', 'Vari√°vel global'],
                'correct_answer': 'Refer√™ncia ao objeto atual'
            },
            {
                'type': 'multiple_choice',
                'question': 'Como indicar que um atributo √© privado por conven√ß√£o?',
                'options': ['Usar mai√∫scula', 'Come√ßar com _', 'Usar @private', 'Come√ßar com #'],
                'correct_answer': 'Come√ßar com _'
            }
        ]
    },
    6: {
        'title': 'Tratamento de Exce√ß√µes',
        'description': 'Aprenda a lidar com erros usando try, except, finally e raise',
        'content': '''<div class="module-header">
            <h3>‚ö†Ô∏è M√≥dulo 6 - Tratamento de Exce√ß√µes</h3>
            <p class="module-intro"><strong>Torne seus programas √† prova de erros!</strong> Aprenda a antecipar e tratar erros.</p>
        </div>
        
        <div class="module-content">
            <h4>üéØ O que voc√™ vai aprender:</h4>
            <ul class="learning-objectives">
                <li>Tipos comuns de exce√ß√µes</li>
                <li>Blocos try, except, else, finally</li>
                <li>Capturando exce√ß√µes espec√≠ficas</li>
                <li>Lan√ßando exce√ß√µes com raise</li>
                <li>Criando exce√ß√µes personalizadas</li>
            </ul>
            
            <h4>üìö Conte√∫do Te√≥rico:</h4>
            
            <h5>1. Por que Tratar Exce√ß√µes?</h5>
            <p>Exce√ß√µes s√£o erros que podem ocorrer durante a execu√ß√£o. Trat√°-las evita que o programa "quebre".</p>
            
            <div class="alert alert-warning">
                <strong>Exce√ß√µes comuns:</strong>
                <ul class="mb-0">
                    <li><code>ZeroDivisionError</code> - Divis√£o por zero</li>
                    <li><code>ValueError</code> - Valor inadequado</li>
                    <li><code>TypeError</code> - Tipo incorreto</li>
                    <li><code>FileNotFoundError</code> - Arquivo n√£o encontrado</li>
                    <li><code>KeyError</code> - Chave inexistente</li>
                </ul>
            </div>
            
            <div class="code-example">
                <h6>Tratamento b√°sico:</h6>
                <pre><code>try:
    numero = int(input("Digite um n√∫mero: "))
    resultado = 10 / numero
    print(f"Resultado: {resultado}")
except ZeroDivisionError:
    print("Erro: N√£o √© poss√≠vel dividir por zero!")
except ValueError:
    print("Erro: Digite um n√∫mero v√°lido!")</code></pre>
            </div>
            
            <div class="alert alert-success">
                <h6><i class="fas fa-lightbulb"></i> Boa Pr√°tica:</h6>
                <p class="mb-0">Sempre trate exce√ß√µes espec√≠ficas antes de capturar Exception gen√©rica. Isso torna o c√≥digo mais robusto.</p>
            </div>
        </div>''',
        'quiz': [
            {
                'type': 'multiple_choice',
                'question': 'Qual palavra-chave inicia um bloco de tratamento de exce√ß√£o?',
                'options': ['try', 'catch', 'except', 'handle'],
                'correct_answer': 'try'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual palavra-chave captura uma exce√ß√£o?',
                'options': ['catch', 'except', 'handle', 'grab'],
                'correct_answer': 'except'
            },
            {
                'type': 'multiple_choice',
                'question': 'Quando o bloco "finally" √© executado?',
                'options': ['Apenas se houver erro', 'Apenas se n√£o houver erro', 'Sempre', 'Nunca'],
                'correct_answer': 'Sempre'
            },
            {
                'type': 'multiple_choice',
                'question': 'Como lan√ßar uma exce√ß√£o manualmente?',
                'options': ['throw Exception', 'raise Exception', 'error Exception', 'exception Exception'],
                'correct_answer': 'raise Exception'
            },
            {
                'type': 'multiple_choice',
                'question': 'O que acontece se uma exce√ß√£o n√£o for tratada?',
                'options': ['O programa continua', 'O programa para com erro', 'O erro √© ignorado', 'Nada acontece'],
                'correct_answer': 'O programa para com erro'
            }
        ]
    },
    7: {
        'title': 'Bibliotecas e APIs',
        'description': 'Use bibliotecas externas e integre com APIs para expandir funcionalidades',
        'content': '''<div class="module-header">
            <h3>üìö M√≥dulo 7 - Bibliotecas e APIs</h3>
            <p class="module-intro"><strong>Expanda o poder do Python!</strong> Descubra como usar bibliotecas externas e APIs.</p>
        </div>
        
        <div class="module-content">
            <h4>üéØ O que voc√™ vai aprender:</h4>
            <ul class="learning-objectives">
                <li>Instalando bibliotecas com pip</li>
                <li>Fazendo requisi√ß√µes HTTP</li>
                <li>Consumindo APIs REST</li>
                <li>Processando dados JSON</li>
                <li>Bibliotecas populares do Python</li>
            </ul>
            
            <h4>üìö Conte√∫do Te√≥rico:</h4>
            
            <h5>1. Gerenciamento de Pacotes</h5>
            <p>O pip √© o gerenciador de pacotes do Python que permite instalar bibliotecas externas.</p>
            
            <div class="code-example">
                <h6>Comandos pip essenciais:</h6>
                <pre><code># Instalar uma biblioteca
pip install requests
pip install pandas numpy

# Listar bibliotecas instaladas
pip list

# Mostrar informa√ß√µes de uma biblioteca
pip show requests

# Atualizar uma biblioteca
pip install --upgrade requests

# Desinstalar
pip uninstall requests</code></pre>
            </div>
            
            <div class="alert alert-success">
                <h6><i class="fas fa-lightbulb"></i> Dica Profissional:</h6>
                <p class="mb-0">Sempre verifique a documenta√ß√£o oficial das APIs antes de us√°-las. Muitas requerem autentica√ß√£o via chaves API.</p>
            </div>
        </div>''',
        'quiz': [
            {
                'type': 'multiple_choice',
                'question': 'Como instalar uma biblioteca externa?',
                'options': ['pip install nome_biblioteca', 'python install nome_biblioteca', 'import install nome_biblioteca', 'get nome_biblioteca'],
                'correct_answer': 'pip install nome_biblioteca'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual biblioteca √© popular para fazer requisi√ß√µes HTTP?',
                'options': ['http', 'requests', 'urllib', 'web'],
                'correct_answer': 'requests'
            },
            {
                'type': 'multiple_choice',
                'question': 'O que √© uma API?',
                'options': ['Um tipo de vari√°vel', 'Interface de Programa√ß√£o de Aplica√ß√µes', 'Uma biblioteca Python', 'Um banco de dados'],
                'correct_answer': 'Interface de Programa√ß√£o de Aplica√ß√µes'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual m√©todo HTTP √© usado para buscar dados de uma API?',
                'options': ['POST', 'PUT', 'GET', 'DELETE'],
                'correct_answer': 'GET'
            },
            {
                'type': 'multiple_choice',
                'question': 'Como listar todas as bibliotecas instaladas?',
                'options': ['pip show', 'pip list', 'pip install', 'pip check'],
                'correct_answer': 'pip list'
            }
        ]
    },
    8: {
        'title': 'Banco de Dados',
        'description': 'Conecte e manipule bancos de dados usando SQLite e opera√ß√µes CRUD',
        'content': '''<div class="module-header">
            <h3>üóÑÔ∏è M√≥dulo 8 - Banco de Dados</h3>
            <p class="module-intro"><strong>Persista seus dados!</strong> Aprenda a armazenar e gerenciar dados usando bancos de dados.</p>
        </div>
        
        <div class="module-content">
            <h4>üéØ O que voc√™ vai aprender:</h4>
            <ul class="learning-objectives">
                <li>Conceitos de banco de dados</li>
                <li>SQLite com Python</li>
                <li>Opera√ß√µes CRUD (Create, Read, Update, Delete)</li>
                <li>Consultas SQL b√°sicas</li>
                <li>Boas pr√°ticas de seguran√ßa</li>
            </ul>
            
            <h4>üìö Conte√∫do Te√≥rico:</h4>
            
            <h5>1. Introdu√ß√£o a Bancos de Dados</h5>
            <p>Bancos de dados s√£o sistemas organizados para armazenar, gerenciar e recuperar informa√ß√µes.</p>
            
            <div class="alert alert-info">
                <strong>Conceitos importantes:</strong>
                <ul class="mb-0">
                    <li><strong>Tabela:</strong> Estrutura que organiza dados</li>
                    <li><strong>Linha/Registro:</strong> Um conjunto de dados</li>
                    <li><strong>Coluna/Campo:</strong> Um tipo de informa√ß√£o</li>
                    <li><strong>Chave Prim√°ria:</strong> Identificador √∫nico</li>
                </ul>
            </div>
            
            <div class="alert alert-warning">
                <h6><i class="fas fa-shield-alt"></i> Seguran√ßa:</h6>
                <p class="mb-0">Sempre use par√¢metros (?) para evitar ataques de SQL Injection. Nunca concatene strings diretamente nas consultas!</p>
            </div>
        </div>''',
        'quiz': [
            {
                'type': 'multiple_choice',
                'question': 'Qual biblioteca √© comumente usada para conectar ao SQLite?',
                'options': ['sqlite3', 'database', 'sqlconnector', 'dbapi'],
                'correct_answer': 'sqlite3'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual comando SQL √© usado para criar uma tabela?',
                'options': ['MAKE TABLE', 'CREATE TABLE', 'NEW TABLE', 'ADD TABLE'],
                'correct_answer': 'CREATE TABLE'
            },
            {
                'type': 'multiple_choice',
                'question': 'O que significa CRUD em banco de dados?',
                'options': ['Create, Read, Update, Delete', 'Connect, Run, Update, Drop', 'Copy, Rename, Upload, Download', 'Create, Remove, Use, Data'],
                'correct_answer': 'Create, Read, Update, Delete'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual m√©todo √© usado para executar comandos SQL?',
                'options': ['cursor.run()', 'cursor.execute()', 'cursor.query()', 'cursor.command()'],
                'correct_answer': 'cursor.execute()'
            },
            {
                'type': 'multiple_choice',
                'question': 'Para que serve o comando "commit()"?',
                'options': ['Conectar ao banco', 'Salvar as mudan√ßas', 'Fechar a conex√£o', 'Criar tabelas'],
                'correct_answer': 'Salvar as mudan√ßas'
            }
        ]
    },
    9: {
        'title': 'Projeto Final',
        'description': 'Integre todos os conceitos aprendidos em um projeto Python completo',
        'content': '''<div class="module-header">
            <h3>üéÜ M√≥dulo 9 - Projeto Final</h3>
            <p class="module-intro"><strong>Integre todos os conceitos!</strong> Crie um projeto completo que demonstra dom√≠nio em Python.</p>
        </div>
        
        <div class="module-content">
            <h4>üéØ O que voc√™ vai aplicar:</h4>
            <ul class="learning-objectives">
                <li>Planejamento e arquitetura de projeto</li>
                <li>Integra√ß√£o de todos os conceitos aprendidos</li>
                <li>Boas pr√°ticas de programa√ß√£o</li>
                <li>Documenta√ß√£o e testes</li>
                <li>Versionamento com Git</li>
            </ul>
            
            <h4>üìö Conte√∫do Te√≥rico:</h4>
            
            <h5>1. Planejamento do Projeto</h5>
            <p>Antes de come√ßar a programar, √© essencial planejar bem o projeto.</p>
            
            <div class="alert alert-info">
                <strong>Etapas do planejamento:</strong>
                <ol class="mb-0">
                    <li>Definir o problema a ser resolvido</li>
                    <li>Listar funcionalidades principais</li>
                    <li>Escolher tecnologias e bibliotecas</li>
                    <li>Criar estrutura de pastas</li>
                    <li>Definir fluxo de dados</li>
                </ol>
            </div>
            
            <div class="alert alert-success">
                <strong>Princ√≠pios importantes:</strong>
                <ul class="mb-0">
                    <li><strong>DRY:</strong> Don't Repeat Yourself</li>
                    <li><strong>KISS:</strong> Keep It Simple, Stupid</li>
                    <li><strong>SRP:</strong> Single Responsibility Principle</li>
                    <li><strong>Coment√°rios:</strong> Explique o "porqu√™", n√£o o "o qu√™"</li>
                    <li><strong>Nomes:</strong> Use nomes descritivos</li>
                </ul>
            </div>
            
            <div class="alert alert-warning">
                <h6><i class="fas fa-trophy"></i> Desafio Final:</h6>
                <p class="mb-0">Crie um projeto que use pelo menos: classes, arquivos, banco de dados, tratamento de exce√ß√µes e uma API externa. Mostre sua evolu√ß√£o!</p>
            </div>
        </div>''',
        'quiz': [
            {
                'type': 'multiple_choice',
                'question': 'O que √© mais importante em um projeto Python?',
                'options': ['C√≥digo limpo e organizado', 'Usar muitas bibliotecas', 'Ter muitas linhas', 'Ser complexo'],
                'correct_answer': 'C√≥digo limpo e organizado'
            },
            {
                'type': 'multiple_choice',
                'question': 'Qual √© a melhor pr√°tica para organizar um projeto Python?',
                'options': ['Tudo em um arquivo', 'Separar em m√≥dulos tem√°ticos', 'Usar apenas fun√ß√µes', 'Evitar comentarios'],
                'correct_answer': 'Separar em m√≥dulos tem√°ticos'
            },
            {
                'type': 'multiple_choice',
                'question': 'O que significa SOLID em programa√ß√£o?',
                'options': ['Um tipo de banco de dados', 'Princ√≠pios de design de software', 'Uma biblioteca Python', 'Um framework web'],
                'correct_answer': 'Princ√≠pios de design de software'
            },
            {
                'type': 'multiple_choice',
                'question': 'Por que √© importante tratar exce√ß√µes em um projeto?',
                'options': ['Para o programa rodar mais r√°pido', 'Para evitar que o programa pare inesperadamente', 'Para usar menos mem√≥ria', 'N√£o √© importante'],
                'correct_answer': 'Para evitar que o programa pare inesperadamente'
            },
            {
                'type': 'multiple_choice',
                'question': 'O que √© refatora√ß√£o de c√≥digo?',
                'options': ['Deletar o c√≥digo', 'Melhorar a estrutura sem mudar a funcionalidade', 'Adicionar novos recursos', 'Corrigir bugs'],
                'correct_answer': 'Melhorar a estrutura sem mudar a funcionalidade'
            }
        ]
    }
}

# Final exam questions covering all modules
FINAL_EXAM = {
    'title': 'Exame Final - Python Completo',
    'description': 'Teste seus conhecimentos em todos os m√≥dulos do curso',
    'questions': [
        {
            'type': 'multiple_choice',
            'question': 'Qual √© a sa√≠da do c√≥digo: print(type(42))?',
            'options': ['<class "number">', '<class "integer">', '<class "int">', '<class "num">'],
            'correct_answer': '<class "int">'
        },
        {
            'type': 'multiple_choice',
            'question': 'Como voc√™ criaria uma lista com n√∫meros de 0 a 4?',
            'options': ['list(range(5))', 'list(0,4)', 'range(0,5)', 'list(range(0,4))'],
            'correct_answer': 'list(range(5))'
        },
        {
            'type': 'multiple_choice',
            'question': 'Qual m√©todo √© usado para adicionar um elemento ao final de uma lista?',
            'options': ['add()', 'append()', 'insert()', 'push()'],
            'correct_answer': 'append()'
        },
        {
            'type': 'multiple_choice',
            'question': 'Como voc√™ abriria um arquivo chamado "dados.txt" para escrita?',
            'options': ['open("dados.txt", "w")', 'file("dados.txt", "write")', 'open("dados.txt", "write")', 'write("dados.txt")'],
            'correct_answer': 'open("dados.txt", "w")'
        },
        {
            'type': 'multiple_choice',
            'question': 'Qual palavra-chave √© usada para definir uma fun√ß√£o?',
            'options': ['function', 'def', 'func', 'define'],
            'correct_answer': 'def'
        },
        {
            'type': 'multiple_choice',
            'question': 'Como voc√™ criaria uma classe chamada "Pessoa" em Python?',
            'options': ['class Pessoa():', 'create class Pessoa:', 'def class Pessoa:', 'new Pessoa():'],
            'correct_answer': 'class Pessoa():'
        },
        {
            'type': 'multiple_choice',
            'question': 'Qual bloco de c√≥digo √© executado quando uma exce√ß√£o N√ÉO ocorre?',
            'options': ['except', 'finally', 'else', 'catch'],
            'correct_answer': 'else'
        },
        {
            'type': 'multiple_choice',
            'question': 'Como voc√™ instalaria a biblioteca "requests"?',
            'options': ['python install requests', 'pip install requests', 'install requests', 'get requests'],
            'correct_answer': 'pip install requests'
        },
        {
            'type': 'multiple_choice',
            'question': 'Qual biblioteca Python √© padr√£o para trabalhar com bancos SQLite?',
            'options': ['sqlite', 'sqlite3', 'database', 'sql'],
            'correct_answer': 'sqlite3'
        },
        {
            'type': 'multiple_choice',
            'question': 'Qual √© uma caracter√≠stica importante de um c√≥digo bem escrito?',
            'options': ['Ser o mais longo poss√≠vel', 'Usar vari√°veis com nomes confusos', 'Ser leg√≠vel e bem documentado', 'Evitar coment√°rios'],
            'correct_answer': 'Ser leg√≠vel e bem documentado'
        }
    ]
}